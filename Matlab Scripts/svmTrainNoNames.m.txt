function [ confusionMatrix, model, label ] = svmTrainNoNames( trX, teX, trY, teY, varargin)
%svmTrainTest trains and tests an SVM, returns accuracy
%   Detailed explanation goes here
disp(varargin)
disp(length(varargin))
rng(13, 'twister');

switch(length(varargin))
    case 2
        model = fitcsvm(trX, trY,...
            varargin{1}, varargin{2});
    case 4
        model = fitcsvm(trX, trY,...
            varargin{1}, varargin{2}, varargin{3}, varargin{4});
    case 6
        model = fitcsvm(trX, trY,...
            varargin{1}, varargin{2}, varargin{3},...
            varargin{4}, varargin{5}, varargin{6});
    case 8
        model = fitcsvm(trX, trY,...
            varargin{1}, varargin{2}, varargin{3},...
            varargin{4}, varargin{5}, varargin{6}, varargin{7}, varargin{8});
    case 10
        disp('Made it to case 10')
        model = fitcsvm(trX, trY, ...
            varargin{1}, varargin{2}, varargin{3},...
            varargin{4}, varargin{5}, varargin{6}, varargin{7}, varargin{8}, ...
            varargin{9}, varargin{10});
    otherwise
        model = fitcsvm(trX, trY );
end

label = predict(model, teX);

confusionMatrix = confusionmat(teY, label);

end
